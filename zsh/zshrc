# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh
# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.

ZSH_THEME="hdforce"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"
# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"
# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"
# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"
# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"
# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git osx python brew gradle zsh-syntax-highlighting zsh-autosuggestions)
source $ZSH/oh-my-zsh.sh


# EXPORTS 
export EDITOR="subl"
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/opt/local/sbin:/usr/local/dev-env/bin
export GOPATH=~/go-workspace

# ALIASES
alias octave="/usr/bin/octave --silent"
alias hgrep="history | grep"
alias :q="exit"
alias :r="source ~/.zshrc"
alias gw="./gradlew"
alias ls="gls --color"

# git aliases
function clonecd() {  git clone $1 && cd `basename ${1/.git//}` ; }
alias status="git status"
alias add="git add"
alias push="git push"
alias pusho="git push origin"
alias commit="git commit -m"
alias checkout="git checkout"
alias co="git checkout"
alias tag="git tag"
alias clone="clonecd"
alias fetch="git fetch"
alias pull="git pull"
alias pullo="git pull origin"
alias merge="git merge"
alias branch="git branch"


# AUTOCOMPLETE BRACKETS, QUOTES
function autopair_paren() {
  LBUFFER+="("
  RBUFFER=")$RBUFFER"
}
zle -N autopair_paren autopair_paren
bindkey "(" autopair_paren

function autopair_brace(){
  LBUFFER+="{"
  RBUFFER="}$RBUFFER"
}
zle -N autopair_brace autopair_brace
bindkey "{" autopair_brace

function autopair_quote(){
  LBUFFER+="\""
  RBUFFER="\"$RBUFFER"
}
zle -N autopair_quote autopair_quote
bindkey "\"" autopair_quote

# automatically ls after cd
function list_all() {
    emulate -L zsh
    ls 
}
chpwd_functions=(omz_termsupport_chpwd list_all)

#JAVA crap
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home

#bash-compatible autocompletion
autoload bashcompinit
bashcompinit

compdef _gradlew_tasks gw

_gradle(){
  local cur=${COMP_WORDS[COMP_CWORD]}
  local gradle_cmd='gradle'
  if [[ -x ./gradlew ]]; then
    gradle_cmd='./gradlew'
  fi
  if [[ -x ../gradlew ]]; then
    gradle_cmd='../gradlew'
  fi
   
  local commands=''
  local cache_dir="$HOME/.gradle_tabcompletion"
  mkdir -p $cache_dir

  # TODO: include the gradle version in the checksum? It's kinda slow
  #local gradle_version=$($gradle_cmd --version --quiet --no-color | grep '^Gradle ' | sed 's/Gradle //g')
  local gradle_files_checksum='';
  if [[ -f build.gradle ]]; then # top-level gradle file
  if [[ -x `which md5 2> /dev/null` ]]; then # mac
    local all_gradle_files=$(find . -name build.gradle -maxdepth 1 2>/dev/null)
    gradle_files_checksum=$(md5 -q -s "$(md5 -q $all_gradle_files)")
    else # linux
    gradle_files_checksum=($(find . -name build.gradle -maxdepth 1 | xargs md5sum | md5sum))
  fi
  else # no top-level gradle file
    gradle_files_checksum='no_gradle_files'
  fi
  if [[ -f $cache_dir/$gradle_files_checksum ]]; then # cached! yay!
    commands=$(cat $cache_dir/$gradle_files_checksum)
  else # not cached! boo-urns!
  alltasks="$($gradle_cmd --no-color --quiet tasks --all | grep -E '^[a-z]' | awk '{print $1}' | sort)"
  tasks="$(echo "$alltasks" | sed 's/^[^:]*://g' | sort | uniq)"
  subtasks="$(echo "$alltasks" | grep ':')"
  commands="$(echo "$tasks"; echo "$subtasks")"
  if [[ ! -z $commands ]]; then
    echo "$commands" > $cache_dir/$gradle_files_checksum
  fi
  fi
  if [[ "$cur" != *:* ]]; then
    # There's no : in the current word, skip sub tasks
    commands="$(echo "$commands" | sed 's/:[^:]*$/:/g' | uniq)"
  else
    # There's a : in the current word, skip normal tasks
    commands="$(echo "$commands" | grep ':')"
  fi
  cur=`echo $cur | sed 's/\\\\//g'`
  COMPREPLY=( $(compgen -W "$(echo "$commands" | tr '\n' ' ')" -- $cur | sed 's/\\\\//g') )
} 
complete -F _gradle gradle
complete -F _gradle gradlew
complete -F _gradle ./gradlew 
complete -F _gradle gw


# MAC OS X SPECIFIC SETTINGS
# show hide all files
function hidedotfiles(){
    defaults write com.apple.finder AppleShowAllFiles -bool NO
    killall Finder
}
function showdotfiles(){
    defaults write com.apple.finder AppleShowAllFiles -bool YES
    killall Finder
}

function growl(){
  echo $'\e]9;'$1'\007' 
}

function weather() {
  curl wttr.in/$1
}

function moon() {
  curl wttr.in/Moon
}

function mov2gif() { 
	ffmpeg -i ${1} -pix_fmt rgb24  -f gif ${1/\.mov/\.gif}
}

function big() {
    echo $@ | sed -e "s/\([A-Za-z]\)/:-\1:/g" -e "s/ /  /g" -e 's/!/:-bang:/g' -e 's/*/:-splat:/g' -e 's/?/:-question:/g'| pbcopy
}

source /usr/local/dev-env/bin/profile
# syntax highlighting
source /Users/satejs/Desktop/.oh-my-zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)
ZSH_HIGHLIGHT_STYLES[default]=none
ZSH_HIGHLIGHT_STYLES[unknown-token]=fg=009
ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=075
ZSH_HIGHLIGHT_STYLES[alias]=fg=106
ZSH_HIGHLIGHT_STYLES[builtin]=fg=106
ZSH_HIGHLIGHT_STYLES[function]=fg=106
ZSH_HIGHLIGHT_STYLES[command]=fg=106
ZSH_HIGHLIGHT_STYLES[precommand]=fg=white
ZSH_HIGHLIGHT_STYLES[commandseparator]=none
ZSH_HIGHLIGHT_STYLES[hashed-command]=fg=009
ZSH_HIGHLIGHT_STYLES[path]=bg=235
ZSH_HIGHLIGHT_STYLES[path_approx]=bg=234
ZSH_HIGHLIGHT_STYLES[path_prefix]=bg=234
ZSH_HIGHLIGHT_STYLES[globbing]=fg=075
ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=white
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=none
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=none
ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=none
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=214
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=214
ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=214
ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=214
ZSH_HIGHLIGHT_STYLES[assign]=none
ZSH_HIGHLIGHT_STYLES[bracket-level-1]='fg=075,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-2]='fg=074,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-3]='fg=039,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-4]='fg=038,bold'
